.DT
add_step
DW_wibble creator help
add_step

.SH Name
.SP 5 5
add_step -  Add a step to a lesson plan.
.EP

.SH Syntax
.SI 5
int add_step(string lesson_name,
             string * blurbs,
             string skill,
             int diff,
             string * responses,
             string * params,
             string award_mess,
             string succeed_mess,
             string fail_mess)
.EI

.SH Parameters
.SI 5
%^BOLD%^lesson_name%^RESET%^ - the name of the lesson this lesson plan is 
associated with. 
%^BOLD%^blurbs%^RESET%^ - An array of strings in order that they should be given 
during the lesson.  This is what the teacher says to the student. ', :, #, etc. 
can be used for say, emote and execute a command respectively.
%^BOLD%^skill%^RESET%^ - The skill being learned.
%^BOLD%^difficulty%^RESET%^ - The bonus level of the skill being learned.
%^BOLD%^responses%^RESET%^ - An array of strings.  These are the expected responses 
to the teacher's blurbs.
%^BOLD%^params%^RESET%^ - an array of strings given as arguments to the responses in 
order.
%^BOLD%^award_mess%^RESET%^ - The string a player sees if they get a TM award during this step. It
should not end in a newline \n.
%^BOLD%^succeed_mess%^RESET%^ - The string a player gets if they are successful in doing what the 
step asks.  It should not end in a newline \n.
%^BOLD%^fail_mess%^RESET%^ - A string telling the player that they've failed.  It should not 
end in a newline \n.

.EI

.SH Defined in
.SI 5
/std/learning.c
.EI

.SH Description
.SP 5 5

Add a step to a lesson plan.  This is the interaction between student and 
teacher. One step should be defined for each thing you want the student
to learn.

.EP


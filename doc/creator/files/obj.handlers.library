The library is a sort of information centre.  Currently it supports only the
recording on stories about players and recording the quests that they have done,
but there is no reason that statistics like the average number of monsters
killed per reset, number of players on, etc couldn't be put into it.  The
functions currently supported are:

string query_title(string name);
string *query_quests(string name);
string get_highest_quest(string name);
string get_highest_quest_level(string name);
int query_quest_points(string name);
string get_most_recent_quest(string name);
int get_most_recent_time(string name);
int set_quest(string name, string quest);
int query_quest_time(string name, string quest);
story query_story(string name);
int query_quest_done(string name, string quest);
void set_title(string player, string title);

string query_title(string name);
When a players name is passed to query_title, it will attempt to restore the
save file for that player and will return the title that that player should
have, and if there is no title stored, it will return 0;

string *query_quests(string name);
When a players name is passed to query_quests, it will return the array that
contains all the quests that a player has done.  If that player does not exist
or that player has done no quests, ({ }) will be returned.

string get_highest_quest(string name);
When a players name is passed to get_highest_quest, it will return the quest
that was worth the most quest points when done by the player.

int get_highest_quest_level(string name);
When a players name is passed to get_highest_quest_level, it will return the
highest number of quest points, that the player has obtained from a single
quest.

int query_quest_points(string name);
When a players name is passed to query_quest_points, it will return the total
number of quest points that player has accumalated.

string get_most_recent_quest(string name);
When a players name is passed to get_most_recent_quest, it will return the
quest that was most recently completed.

int get_most_recent_time(string name);
When a players name is passed to get_most_recent_time, it will return the time
the most recent quest was done.  The time is the value returned by time() at
the time that the quest was done.

int set_quest(string name, string quest);
This function should be called when a quest is finished.  It will then call the
quest_completed function on the quest handler and do all assorted modifications
to the player object etc.  The name should be the players name and the quest
should be the name of the quest that is stored in the quest handler.  Return
values are 0 for quest already completed, or 1 for quest completed for the first
time.

int query_quest_time(string name, string quest);
This function given the players name and the quest name, will return the time
at which that quest was completed, or -1 if that quest has not been completed.

string query_story(string name);
Given the name of a player, this function will return a story about them, based
on the quests they have done.

int query_quest_done(string name, string quest);
This function when passed a players name and a quest name, will return 0 or 1
to depending on whether or not the player has done the quest or not.

void set_title(string player, string title);
This function will set the title that you get when you log in.  You must pass
it the players name and the title that you want them to have each time they
log in.  This should not normally be called.

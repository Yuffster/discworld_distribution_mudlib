#/obj/handlers/nroff.c
nroffed_file ({0,2,14,"%^BOLD%^new shop owner","Discworld shop help","new shop owner%^RESET%^","",8,"Restricting the use of the shop",3,5,5,"The owner can control who can use the shop.  This makes everyone effectively black listed and only allows specified people to use the shop, rather than letting anyone except those who are black listed use the shop.You can restrict access on guild, person, deity, cost, club, family or level basis.The expressions are setup free form using the operators 'and', 'or', 'not' '+', '-', '*', '/', '>', '>=', '<', '<=', '=', '<>' or 'if'.  The main operators behave like you would expect and you can manipulate numbers and money as you wish.There are three types of constants you can specify.  Money constants are defined by a string with $'s around it, ie: $5 dollars$ or $4 lancre pennies$ or $4.00$.  Use of $4.00$ will work with Ankh-Morpork money but will not work in other parts of the country.  String constants are defined with '\"'s, ie: \"frog\", \"blue\".  Integer constants are just numbers, ie: 12, 14, 100.The 'if' operator is a special case and can be used as a flow control construct.  The syntax of an if is: if <condition> then <expression> else <expression> endif.  The condition must return a boolean, and both the return types for the expressions must be the same.There are several variables setup for you to use when controlling the shop.  They are: 'level' for the level of the player, 'guild' for the guild of the player (this is with an s), 'deity' for the deity of the player, 'family' for the family of the player, 'order' for the wizard order of the player, 'objectvalue' for the value of the object, 'objectenchant' for the enchant of the object and 'objectcondition' for the condition of the object.  The object methods will only work when actually dealing with objects.  In the case of use and buy expressions these will not be used, they will only work when setting up auto selling expressions.There are also a few functions that can be used.  Functions looks like this: clubmember(\"faculty\") for example.  The functions available are 'clubmember', 'containsspell' and 'percentageliquid'.  Only the 'clubmember' function can be used in the use and buy expressions, the other two only operate on objects.'objectvalue' is the value of the item as if you bought the item from a normal shop.  Enchantment and any extra features of the item are not taken into account.'objectcondition' is the percentage condition of the object, so it ranges from 0 to 100.'objectenchant' is the percentage enchantment of the object, so it ranges from 0 to 100.'clubmember' takes in a string, which is the name of the club to check to see if the player is a member of. eg: clubmember(\"faculty\")'containsspell' checks to see if the current selling items contain the specified spell.  eg: containsspell(\"Fyodor's Nimbus of Porterage\")'percentageliquid' returns the percentage of the container that is full of the specified liquid.  eg: percentageliquid(\"pale tea\")To do useful things with the variables you need to compare them to things, or multiply them or something.  For example, guild = \"warrior\" would return true if the guild of the player using the store was a warrior.'approve buy expression' sets up an expression which must be matched for the person to be able to buy from the shop.  It defaults to 'true' which means the shop can always be bought from.'approve use expression' sets up an expression which much be matched for the person to be able to use the shop.  It defaults to 'true' which means the shop can always be used. ","",8,"Examples",7,5,"> approve use expression (guild = \"warriors\" and level > 100) or guild = \"wizards\"You set the use expression to: (guild = \"warriors\" and level > 100) or guild = \"wizards\"","",})
nroffed_file_name "/save/books/shop_owner/page13"
modified_time 958506100

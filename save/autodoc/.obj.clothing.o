#/obj/handlers/autodoc/autodoc_file.c
public_functions (["replace_me":({({"void",}),({}),([]),}),"query_pockets":({({"mixed","*",}),({}),(["see":({"add_pocket()","remove_pockets()",}),"main":({"This method returns all the pockets on the object.",}),"return":({"all the pockets on the object",}),]),}),"break_me":({({"void",}),({}),(["main":({"This method causes the object to be broken.",}),]),}),"set_pocket_mess":({({"void",}),({({"string",}),"words",}),(["see":({"query_pocket_mess()","add_pocket()","remove_pockets()",}),"param":({"words the message associated with the pocket",}),"main":({"This method sets the message associated with the pocket.",}),]),}),"query_objective":({({"string",}),({}),([]),}),"set_is_pair":({({"void",}),({({"int",}),"comes_in_pairs",}),([]),}),"query_pocket_mess":({({"string",}),({}),(["see":({"set_pocket_mess()","query_pockets()","add_pocket()","remove_pockets()",}),"main":({"This method returns the message associated with the pocket.",}),"return":({"the message associated with the pocket",}),]),}),"add_pocket":({({"void",}),({({"string",}),"type",({"int",}),"amount",}),(["see":({"query_pockets()","remove_pockets()","set_pocket_mess()","query_pocket_mess()",}),"param":({"type the type of pocket","amount the amount the pocket can hold",}),"main":({"This method adds a pocket onto the clothing.<p>When setting the amount a pocket can holduse the following guide:<pre>o==================o==============o========o| Type of Clothing | example type | amount |o==================o==============o========o|   Aprons         |    front     |  8-10  ||------------------+--------------+--------||   Coats          |     side     |  6-7   ||                  |    inside    |   5    ||------------------+--------------+--------||   Corsets        |   cleavage   |   2    ||------------------+--------------+--------||   Dresses        |     side     |  2-3   ||------------------+--------------+--------||   Hats           |    inside    |  2-6   ||------------------+--------------+--------||   Jackets        |     side     |  2-3   ||                  |    inside    |  2-3   ||------------------+--------------+--------||   Robes          |     side     |   5    ||                  |    sleeve    |   2    ||------------------+--------------+--------||   Shirts         |    breast    |  2-3   ||------------------+--------------+--------||   Skirts         |     side     |   4    ||------------------+--------------+--------||   Trousers       |     side     |   4    ||                  |     back     |   2    ||------------------+--------------+--------||   Underwear      |    front     |  1-2   ||                  |    breast    |  1-2   ||                  |   cleavage   |   2    |o==================o==============o========o</pre>",}),]),}),"query_clothing":({({"int",}),({}),(["main":({"This method will return true if the item is an item of clothing.",}),"return":({"always returns true",}),]),}),"query_is_pair":({({"int",}),({}),([]),}),"setup_clothing":({({"void",}),({({"int",}),"number",}),(["param":({"number the maximum condition for the clothing",}),"main":({"This method sets up the condition for the clothing.",}),]),}),"remove_pockets":({({"void",}),({}),(["see":({"add_pocket()","query_pockets()",}),"main":({"This method removes all pockets from the clothing.",}),]),}),"query_pronoun":({({"string",}),({}),([]),}),])
protected_functions ([])
inherits (["/std/basic/close_lock":({}),"/std/container":({}),"/std/basic/wearable":({}),])
main_docs (["main":({"This is the clothing file.  COntains everything you need tomake some nice clothing.",}),])
define_docs ([])
includes (["/include/move_failures.h":1059516192,"/include/virtual.h":1059516193,])
class_docs ([])
file_name "/obj/clothing.c"
last_changed 1059516271

#/obj/handlers/autodoc/autodoc_file.c
public_functions (["weapon_attacks":({({"mixed","*",}),({({"int",}),"percent",({"object",}),"target",}),(["main":({"This function returns 0 or more attacks for this weapon against thegiven target.",}),"see":({"combat.h",}),"return":({"an array of 0 or more attacks. This array is indexed by theAT_ macros defined in combat.h",}),"param":({"percent the attack percentage","target who is being hit",}),]),}),"calc_attack":({({"int",}),({({"int",}),"number",({"int",}),"percent",}),([]),}),"query_special_messages":({({"mapping",}),({}),([]),}),"modify_damage":({({"int",}),({({"int",}),"damage",({"string",}),"attack_name",}),([]),}),"query_attack_data":({({"mixed","*",}),({}),([]),}),"query_weapon_type":({({"string",}),({}),(["main":({"This method attempts to work out what type of weapon this is.",}),"return":({"the weapon type",}),]),}),"remove_attack":({({"void",}),({({"string",}),"a_name",}),(["main":({"This method removes the attack of the given name.",}),"see":({"add_attack()",}),"param":({"a_name the name of the attack to remove",}),]),}),"query_attack_message":({({"mixed","*",}),({({"string",}),"name",({"string",}),"type",}),(["main":({"This method returns the attack message associated with thetype and name.  The type and name are around this way to correspondto the parameters to add_attack.",}),"return":({"the attack message array, 0 for none",}),"param":({"name the name of the attack","type the type of the attack",}),]),}),"query_attack_types":({({"string","*",}),({}),([]),}),"attack_function":({({"void",}),({({"string",}),"a_name",({"int",}),"damage",({"object",}),"attack_ob",({"object",}),"attack_by",}),([]),}),"add_attack":({({"varargs","int",}),({({"string",}),"a_name",({"int",}),"chance",({"int","*",}),"damage",({"string",}),"type",({"string",}),"skill",({"mixed",}),"func",({"mixed",}),"bogus_1",({"mixed",}),"bogus_2",}),(["main":({"This method adds an attack onto the object.  The name of the attackmust be unique on each object.",}),"see":({"remove_attack()",}),"param":({"a_name attack name","change the chance of it occuring","damage the damage it will do","type the type of the attack","skill the skill used by the attack","func the special function","bogus_1 errrr.","bogus_2 frog.",}),]),}),"add_attack_message":({({"void",}),({({"string",}),"name",({"string",}),"type",({"string","*",}),"data",}),(["main":({"This method adds a special attack message set onto the weapon.  The typeand name are around this way to correspondto the parameters to add_attack.",}),"see":({"/obj/handlers/attack_messages","query_special_message()",}),"example":({"inherit \"/obj/weapon\";void setup() {  ...  add_attack_message(\"gumboot\", \"blunt\", ({    0, \"$N gumboot$s at $I with $D\",   20, \"$N lightly gumboot$s $I in the $z with $D\",   60, \"$N gumboot$s $I in the $z with $D\", 5000, \"$N heavily gumboot$s $I in the $z with $D\" }));  ...} /* setup() */",}),"param":({"name the name of the attack (0 for none)","type the type of attack","data the attack data",}),]),}),"query_attack_names":({({"string","*",}),({}),([]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This class has alkl the stuff for anything which can damage somethingelse, this is included into living and weapons.",}),"author":({"Pinkfish.",}),])
define_docs ([])
includes (["/include/weapon.h":1059516193,])
class_docs ([])
file_name "/std/weapon_logic.c"
last_changed 1059516249

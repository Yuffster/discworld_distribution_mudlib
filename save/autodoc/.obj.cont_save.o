#/obj/handlers/autodoc/autodoc_file.c
public_functions (["can_find_match_recurse_into":({({"int",}),({({"object",}),"looker",}),([]),}),"query_can_recurse":({({"int",}),({}),([]),}),"do_load":({({"varargs","void",}),({({"object",}),"thing",}),(["main":({"Loads the data for the saved container from the save file.",}),"param":({"thing the person to report errors to",}),]),}),"set_can_recurse":({({"void",}),({({"int",}),"recurse_flag",}),([]),}),"query_save_file":({({"string",}),({}),(["main":({"This method returns the current save file for the object.",}),"return":({"the current save file",}),]),}),"do_save":({({"void",}),({}),(["main":({"This method saves the data to the save file.",}),]),}),"set_save_file":({({"varargs","void",}),({({"string",}),"file",({"object",}),"thing",}),(["main":({"This method sets the save file for the item and then does a load.",}),"param":({"file the file name to set the save object to","thing the thing to set as the person to report errors to",}),]),}),])
protected_functions ([])
inherits (["/obj/baggage":({}),])
main_docs (["main":({"A container that will save it's contents in a nice happy way.  Thecontainer will not allow stuff in or out until it has finished loading.",}),"author":({"Ceres",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/obj/cont_save.c"
last_changed 1059516271
